/**************************************************************************\
$VER: AnsiCheck, v1.1.5 (Feb-24-2020) by k1ds3ns4t10n of -X-caliber BBS
\**************************************************************************/
options results;signal on SYNTAX;signal on ERROR;signal on IOERR
parse value sourceline(2) with " "title", "ver" ("vdate") by "author" of "hq
esc="1b5b"x;cty="19"x;ctq="11"x;CR="0d"x
rs="rexxsupport.library";if ~show("l",rs) then if ~addlib(rs,0,-30) then exit
parse source . . fp .; df=left(fp,max(lastpos('/',fp),lastpos(':',fp)))
/**************************************************************************/
/*                                                                        */
/*  AnsiCheck                                    -X-caliber BBS           */
/*    An ANSI detect routine with terminal          bbs.aholix.net:6800   */
/*    size detect for C-Net Amiga 5.21b that                              */
/*    minimizes stray user input during detection                         */
/*                                                                        */
/*    Inspired by RIPDetect by Leo Anderson Jr. (Kicker) 15-Nov-95        */
/*    http://aminet.net/package/comm/cnet/RIPdetect                       */
/*                                                                        */
/*    This has been tested on the following terminals:                    */
/*    CCGMS v17.2 (c64), Ultimate (c64) no ANSI detected                  */
/*    Striketerm 2014 (c64) 40 col and 80 col ANSI detected               */
/*                                                                        */
/*    JR-Comm 1.02a (Amiga) ANSI detected                                 */
/*    Term 4.8 (Amiga) ANSI detected                                      */
/*                                                                        */
/*    iTerm2 Build 3.3.9 (macOS) ANSI detected                            */
/*    Netrunner 2.00 Beta 18 (Win10, Linux 64) ANSI detected              */
/*    RIPtel64 3.1 (Win10) RIP detected                                   */
/*    Syncterm 1.0 (Win10), 1.0b (macOS), 1.1b (Linux 64) ANSI detected   */
/*                                                                        */
/*    Use at your own risk.                                               */
/*                                                                        */
/**************************************************************************/

delaytime = 2

getuser 1109795; localMode=result     /* local mode? */
if localMode then exit

sendstring cty"f1Ansi/RIP detect..."

/* syncterm blackout and added CR for console when viewing user */
bufferflush;sendmodem esc"30m"esc"!"esc"6n"esc"0m";sendstring CR
termReply = ""
call time("r")
do until io==1
  checkio; io=result
  if time("e")>delaytime then do signal noAnsi
end
do until termReply~="" & io==0
  checkio; io=result
  if io==1 then do
    getchar; ans=result; call check(ans)
    termReply = termReply||ans
    call time('r')
  end
  else if time('e')>delaytime then signal noAnsi
end
bufferflush

/* The search for 0x2b ("+") is from the original RIPDetect source. I'm not
   sure why this is done. Possibly as a way to bypass the ANSI detect by
   typing "+" while its detecting. */
if index(termReply, "2b"x)>0 then signal noAnsi
else if index(termReply, "RIPSCRIP")>0 then do
  sendstring "RIP Terminal Detected"
  /* do RIP stuff here as needed */
  signal bye
end
else if index(termReply, "1b5b"x)>0 then do
  transmit "ANSI Terminal Detected!"
  /* do ANSI stuff here */
  transmit "Detecting Terminal Size..."
  call delay(25) /* this delay is just for display purposes */
  parse value detectScreen() with . "[" row ";" col "R" .
  if row=="" | col=="" then signal noSize
  transmit cty"f1Terminal Size: "col||"x"||row
  /* NOTE: If setting term width and height to the user's preferences, you
     must sanitize the row and col values to between 1 and 127 due to a
     limitation in C-Net 5.21b. You have been warned ;) */
  signal bye
end
else do
  transmit "Strange reply from terminal: "
  do i=1 to length(termReply)
    sendstring "0x"||c2x(substr(termReply, i, 1))||" "
  end
  transmit
  transmit "Please notify "author" at "hq" of this result and what terminal program you are using."
  signal bye
end

noSize:
transmit cty"f1Terminal size not determined."
signal bye

noAnsi:
transmit "Neither Ansi nor RIP found   "
signal bye

bye:
bufferflush
exit

/* Detect user's terminal rows and columns up to max 300 x 400
   by k1ds3ns4t10n -X-caliber bbs.aholix.net:6800 */
detectScreen: procedure expose esc cty delaytime
  c1b=0; c5b=0; row=""; c3b=0; col=""; c52=0;
  /* Testing on many terms revealed 300 x 400 to be the sweet spot which
     worked on all terminals tested. Altering these values can cause this
     to break for some terminals. You have been warned! ;) */
  bufferflush;sendmodem esc"H"esc"300B"esc"400C"esc"6n"
  call time("r")
  do until io==1
    checkio; io=result
    if time("e")>delaytime then do signal noSize
  end
  do until c52
    getchar; ans=result; call check(ans)
    if ~c1b & ~c5b & ~c3b & ~c52 & ans=="1b"x then c1b=1
    else if c1b & ~c5b & ~c3b & ~c52 & ans=="5b"x then c5b=1
    else if c1b & c5b & ~c3b & ~c52 & datatype(ans, "w") then row=row||ans
    else if c1b & c5b & ~c3b & ~c52 & ans=="3b"x then c3b=1
    else if c1b & c5b & c3b & ~c52 & datatype(ans,"w") then col=col||ans
    else if c1b & c5b & c3b & ~c52 & ans=="52"x then c52=1
    else do; c1b=0; c5b=0; row=""; c3b=0; col=""; c52=0; end
    if time("e")>delaytime then signal noSize
  end
  bufferflush
return "1b5b"x||row";"col"R"

/**************************************************************************/
CHECK:;if ARG() & ARG(1)~="###PANIC" then return ARG(1)
  getcarrier;if result="TRUE" then if ARG() then return ARG(1);else return
  logentry "Lost Carrier!!";bufferflush;exit
SYNTAX:;ERROR:;IOERR:;e1="n1 Error: "rc" ("errortext(rc)")"
  e2="  Line: "left(sigl,4)"File:";c="`"fp", "ver"'";e2=e2" "c;tr e1;tr e2
  logentry e1;logentry e2;e=strip(translate(sourceline(sigl),"\{",""))
  do while e~="";e3="Source: "left(e,37);tr e3;logentry e3;e=substr(e,38);end
  bufferflush
/**************************************************************************\
\*************************** -X-caliber BBS telnet://bbs.aholix.net:6800 **/